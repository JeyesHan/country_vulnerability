from torch.autograd import Variable


def test(testing_data_loader,model,loss_fn,args):
    model.eval()
    test_loss = 0.0
    num = 0
    for sample_batched in testing_data_loader:
        country_ranks, country_aspects = sample_batched['country_ranks'], sample_batched['country_aspects']
        if args.cuda:
            country_ranks, country_aspects = country_ranks.cuda(), country_aspects.cuda()
        country_ranks, country_aspects = Variable(country_ranks, requires_grad=False).float(), \
                                         Variable(country_aspects, requires_grad=False).float()

        country_ranks_predict = model(country_aspects)
        test_loss += loss_fn(country_ranks_predict, country_ranks).data[0]
        num = num + 1
    test_loss = test_loss / num
    print('====================================>test loss:{}'.format(test_loss))